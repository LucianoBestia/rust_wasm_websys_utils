initSidebarItems({"fn":[["add_to_begin_of_debug_text","add to begin of debug text"],["debug_write","debug write into session_storage"],["fetch_only","fetch only, so it goes in cache"],["fetch_response","fetch in Rust with async await for executor spawn_local() return the response as String. Any error will panic."],["get_audio_element_by_id","get input element value string by id"],["get_debug_text","get debug text from session storage"],["get_element_by_id","get element by id"],["get_image_element_by_id","get input element value string by id"],["get_input_element_value_string_by_id","get input element value string by id"],["get_input_element_value_usize_by_id","get input element value usize by id"],["get_random","get a random number, min inclusive, max exclusive"],["get_url_and_hash","get url and hash from window.location"],["load_string_from_local_storage","load string from local_storage"],["load_string_from_session_storage","load string from session_storage"],["now_string","string of now time"],["open_new_local_page_push_to_history","fn open new local page with # and push to history"],["open_new_tab","fn open new tab"],["play_sound","play sound mp3 from src file"],["prepare_json_msg_receivers_for_one","prepare json string for one ws receiver"],["save_string_to_session_storage","save string to session storage"],["save_to_local_storage","save to local storage"],["set_input_element_value_string_by_id","get input element value string by id"],["utf8_truncate","utf8 truncate"],["window","return window object"]]});